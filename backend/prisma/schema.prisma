// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String             @id @default(uuid())
  email              String             @unique
  userId             String             @unique
  name               String
  walletId           String
  coinsCollected     Int                @default(0)
  role               Role               @default(USER)
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt
  tokens             Token[]
  payments           Payment[]
  leaderboardEntries LeaderboardEntry[]

  @@index([walletId])
}

model Token {
  id          String    @id @default(uuid())
  token       String    @unique
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  type        TokenType
  expires     DateTime
  blacklisted Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model LeaderboardEntry {
  id     String @id @default(uuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String @unique
  name   String
  score  Int
}

model Payment {
  id           String        @id @default(uuid())
  user         User          @relation(fields: [userId], references: [id])
  userId       String
  paymentId    String        @unique
  itemId       String
  status       PaymentStatus
  consentUrl   String
  isAutoMinted Boolean       @default(true)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model AssetMint {
  id                String          @id @default(uuid())
  userId            String
  gsAssetId         String          @unique
  itemId            String
  status            AssetMintStatus
  paymentDocumentId String
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
}

enum Role {
  USER
  ADMIN
}

enum TokenType {
  REFRESH
  RESET_PASSWORD
  VERIFY_EMAIL
}

enum PaymentStatus {
  PENDING
  INITIATED
  COMPLETED
  FAILED
}

enum AssetMintStatus {
  PENDING
  INITIATED
  COMPLETED
  FAILED
}
